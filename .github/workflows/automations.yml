name: Actions after push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  check-for-debs-modifications: # https://github.community/t/run-job-only-if-folder-changed/118292/2
    name: Check for debs modifications
    runs-on: ubuntu-latest
    outputs:
      modified: ${{ steps.check-debs.outputs.modified }}
    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: 📄 Checking for modified debs
        id: check-debs
        run: |
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo Modified file: $file
            if [[ $file != debs/* ]]; then
              echo "::set-output name=modified::false"
              break
            else
              echo "::set-output name=modified::true"
            fi
          done < files.txt

  update-packages-and-release:
    name: Update Packages and Release
    needs: check-for-debs-modifications
    if: needs.check-for-debs-modifications.outputs.modified == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: 'main'
      - name: 🔍 Check for dependencies
        run: command -v zstd || sudo apt install zstd
      - name: 📝 Create Packages
        run: apt-ftparchive packages ./debs > Packages
      - name: 📝 Create Packages.bz2 from Packages
        run: bzip2 -c9 Packages > Packages.bz2
      - name: 📝 Create Packages.xz from Packages
        run: xz -c9 Packages > Packages.xz
      - name: 📝 Create Packages.lzma from Packages
        run: xz -5fkev --format=lzma Packages > Packages.lzma
      - name: 📝 Create Packages.gz from Packages
        run: gzip -c9 Packages > Packages.gz
      - name: 📝 Create Packages.zstd from Packages
        run: zstd -c19 Packages > Packages.zst
      - name: 📥 Import GPG keys
        run: |
          echo "${{ secrets.GPG_PUBLIC_KEY }}" > gpg-pub.asc
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > gpg-priv.asc
          gpg --import gpg-pub.asc
          echo "${{ secrets.GPG_PASSWORD }}" | gpg --batch --yes --pinentry-mode=loopback --passphrase-fd 0 --import gpg-priv.asc
      - name: 🔏 Update Release files
        run: |
          grep -E "Origin:|Label:|Suite:|Version:|Codename:|Architectures:|Components:|Description:" Release > Base
          apt-ftparchive release . > Release
          cat Base Release > out && mv out Release
          echo "${{ secrets.GPG_PASSWORD }}" | gpg --batch --yes --pinentry-mode=loopback --passphrase-fd 0 -abs -u 2525C601FD94E886F120AF92AE01315BF612822A -o Release.gpg Release
      - name: 📤 Commit Packages & Release files
        run: |
          git pull origin main
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Packages* Release*
          git commit -m "[Bot] Update Packages & Release files" || true
        # Add '|| true' to avoid marking as error an empty commit
      - name: 🌐 Push
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
        
  minification-css-js-json:
    name: Minify CSS, JavaScript & JSON files
    runs-on: macos-latest
    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: 'main'
      - name: 🔍 Check for dependencies
        run: |
          command -v uglifycss || npm i -g uglifycss
          command -v uglifyjs || npm i -g uglify-js
          command -v jj || brew install tidwall/jj/jj
      - name: 🗜 Minify CSS files
        run: find $GITHUB_WORKSPACE -name "*.css" ! -name "*.min.*" -exec sh -c 'uglifycss --output "${0%.css}.min.css" "$0"' {} \;
      - name: 🗜 Minify JavaScript files
        run: find $GITHUB_WORKSPACE -name "*.js" ! -name "*.min.*" -exec sh -c 'uglifyjs -c -m -o "${0%.js}.min.js" "$0"' {} \;
      - name: 🗜 Minify JSON files
        run: find $GITHUB_WORKSPACE -name "base.json" -exec sh -c 'jj -u < "$0" > ${0%base.json}sileo.json' {} \;
      - name: 📤 Commit minified files
        run: |
          git pull origin main
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          find . -type f \( -name "*.css" -o -name "*.js*" \) -print0 | xargs -0 git add
          git commit -m "[Bot] Update minified files" || true
        # Add '|| true' to avoid marking as error an empty commit
      - name: 🌐 Push
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
