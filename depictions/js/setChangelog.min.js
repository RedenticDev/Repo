$(()=>{let n;for(const t of location.search.substring(1).split("&")){var e=t.split("=");"p"==decodeURIComponent(e[0])&&(n=decodeURIComponent(e[1]))}if(n){let t="";console.log("Package: "+n);var a=location.href.split("/").slice(0,-2).join("/")+"/"+n;$.ajax({type:"GET",url:a+"/info.xml",dataType:"xml"}).done(e=>{console.log("Beginning XML parsing"),$(e).find("packageInfo").each(function(){document.title="Changelog of "+$(this).find("name").text().trim(),$(e).find("change").each(function(){const e=$(this).find("changeVersion").text().trim();t+="<li><h1>"+e+' <span id="'+e.replaceAll(".","")+'"></span></h1>',$(this).find("changeDescription").each(function(){t+="<h2>- "+$(this).text().trim()+"</h2>"}),t+="</li>"}),$("#changelog").append(t)}),$(e).find("packageInfo").each(function(){$(e).find("change").each(function(){const t=$(this).find("changeVersion").text().trim();lastUpdateDate("https://api.github.com/repos/RedenticDev/Repo/commits?path=debs/"+n+"_"+t.replace("v","").trim()+"_iphoneos-arm.deb").then(e=>$("#"+t.replaceAll(".","")).append("- ("+e+")")).catch(e=>console.error(e))})}),console.log("XML parsing done.")}).fail(()=>{$("#changelog").append('Package "'+n+'" not found. Incorrect parameter or no depiction for this package.')})}else console.log("Package not found. Aborting.")}),$("img").bind("dragstart",()=>!1),$("img").bind("mousedown",()=>!1);let updateDatesDict={};function lastUpdateDate(c){function e(a){return new Promise((e,t)=>{const n=new XMLHttpRequest;n.onload=()=>{200==n.status&&4==n.readyState&&e(n.response),t(n.status)},n.onerror=()=>t(n.status),n.open("GET",a),n.send()})}return new Promise((i,t)=>{if(c in updateDatesDict)console.log("Using cached value for url "+c+" ("+updateDatesDict[c]+")"),i(updateDatesDict[c]);else{let o=0;const n=()=>{e(c).then(a=>{e(String(c).replace("mmits?path=","ntents/").concat("?ref=",JSON.parse(a)[o].sha)).then(e=>{const t=new Date(JSON.parse(a)[o].commit.author.date);console.log("Date successfully fetched for url: "+c+" ("+t+")");var n=t.toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"});updateDatesDict[c]=n,i(n)}).catch(e=>{o++,console.warn("Retrying call with commit "+o+" for url "+c),n()})}).catch(e=>{t("Error getting sha value ("+e+")")})};n()}})}