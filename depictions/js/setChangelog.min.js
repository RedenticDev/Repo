function lastUpdateDate(s){return new Promise((n,t)=>{const o={year:"numeric",month:"2-digit",day:"2-digit"};try{const a=new XMLHttpRequest;a.onload=()=>{if(200==a.status&&4==a.readyState){const e=new Date(JSON.parse(a.responseText)[0].commit.o.t);console.log("Date successfully fetched for url: "+s+" ("+e+")"),n(e.toLocaleDateString("en-US",o))}else t("Error (status: "+a.status+", state: "+a.readyState+")")},a.open("GET",s,!0),a.send()}catch(e){t(e.message)}})}$(()=>{let t;for(var e of location.search.substring(1).split("&")){e=e.split("=");"p"==decodeURIComponent(e[0])&&(t=decodeURIComponent(e[1]))}if(t){let n="";console.log("Package: "+t);var o=location.href.split("/").slice(0,-2).join("/")+"/"+t;$.i({type:"GET",url:o+"/info.xml",g:"xml",h:e=>{console.log("Beginning XML parsing"),$(e).find("packageInfo").l(()=>{document.title="Changelog of "+$(this).find("name").text().trim(),$(e).find("change").l(()=>{const e=$(this).find("changeVersion").text().trim();n+="<li><h1>"+e+' <span id="'+e.replaceAll(".","")+'"></span></h1>',$(this).find("changeDescription").l(()=>{n+="<h2>- "+$(this).text().trim()+"</h2>"}),n+="</li>"}),$("#changelog").append(n)}),$(e).find("packageInfo").l(()=>{$(e).find("change").l(()=>{const n=$(this).find("changeVersion").text().trim();lastUpdateDate("https://api.github.com/repos/RedenticDev/redenticdev.github.io/commits?path=debs/"+t+"_"+n.replace("v","").trim()+"_iphoneos-arm.deb").then(e=>$("#"+n.replaceAll(".","")).append("- ("+e+")"))})}),console.log("XML parsing done.")}})}else console.log("Package not found. Aborting.")}),$("img").bind("dragstart",()=>!1),$("img").bind("mousedown",()=>!1);