function lastUpdateDate(i){return new Promise((t,n)=>{const o={year:"numeric",month:"2-digit",day:"2-digit"};try{const a=new XMLHttpRequest;a.onload=()=>{if(200==a.status&&4==a.readyState){const e=new Date(JSON.parse(a.responseText)[0].commit.committer.date);console.log("Date successfully fetched for url: "+i+" ("+e+")"),t(e.toLocaleDateString("en-US",o))}else n("Error (status: "+a.status+", state: "+a.readyState+")")},a.open("GET",i,!0),a.send()}catch(e){n(e.message)}})}$(()=>{let n;for(var e of location.search.substring(1).split("&")){e=e.split("=");"p"==decodeURIComponent(e[0])&&(n=decodeURIComponent(e[1]))}if(n){let t="";console.log("Package: "+n);var o=location.href.split("/").slice(0,-2).join("/")+"/"+n;$.ajax({type:"GET",url:o+"/info.xml",dataType:"xml",success:e=>{console.log("Beginning XML parsing"),$(e).find("packageInfo").each(function(){document.title="Changelog of "+$(this).find("name").text().trim(),$(e).find("change").each(function(){const e=$(this).find("changeVersion").text().trim();t+="<li><h1>"+e+' <span id="'+e.replaceAll(".","")+'"></span></h1>',$(this).find("changeDescription").each(function(){t+="<h2>- "+$(this).text().trim()+"</h2>"}),t+="</li>"}),$("#changelog").append(t)}),$(e).find("packageInfo").each(function(){$(e).find("change").each(function(){const t=$(this).find("changeVersion").text().trim();lastUpdateDate("https://api.github.com/repos/RedenticDev/redenticdev.github.io/commits?path=debs/"+n+"_"+t.replace("v","").trim()+"_iphoneos-arm.deb").then(e=>$("#"+t.replaceAll(".","")).append("- ("+e+")"))})}),console.log("XML parsing done.")}})}else console.log("Package not found. Aborting.")}),$("img").bind("dragstart",()=>!1),$("img").bind("mousedown",()=>!1);